pipeline{
    agent none

    stages{
        stage('build'){
            agent{
                docker{
                    image 'python:2.7.16-slim'
                    args '--user root'
                }
            }
            when{
                changeset "**/vote/**"
            }
            steps{
                echo 'compiling vote app'
                dir('vote'){
                    sh 'pip install -r requirements.txt'
                }
            }
        }
        stage('test'){
            agent{
                docker{
                    image 'python:2.7.16-slim'
                    args '--user root'
                }
            }
            when{
                changeset "**/vote/**"
            }
            steps{
                echo 'running unit tests on vote app'
                dir('vote'){
                    sh 'pip install -r requirements.txt'
                    sh 'nosetests -v'
                }
            }
        }
        stage('docker-package'){
            agent any
            when{
              changeset "**/vote/**"
              branch 'master'
            }
            steps{
                echo 'packageing vote app with docker'
                script{
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin'){
                        def workerImage = docker.build("robslab/vote:v${env.BUILD_ID}", "./vote")
                        workerImage.push()
                        workerImage.push("{env.BRANCH_NAME}")
                    }
                }
            }
        }
    }
    post{
        always{
            echo 'pipeline for vote is complete..'
        }
        failure{
          slackSend (channel: "learn-cicd", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER}")
        }
        success{
          slackSend (channel: "learn-cicd", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER}")
        }
    }
}
