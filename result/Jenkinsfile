pipeline{
    agent none

    stages{
        stage('build'){
           agent{
                docker{
                    image 'node:8.16.0-alpine'
                }
            }
            when{
                changeset "**/result/**"
            }
            steps{
                echo 'compiling result app'
                dir('result'){
                    sh 'npm install'
                }
            }
        }
        stage('test'){
           agent{
                docker{
                    image 'node:8.16.0-alpine'
                }
            }
            when{
                changeset "**/result/**"
            }
            steps{
                echo 'running unit tests on result app'
                dir('result'){
                    sh 'npm install'
                    sh 'npm test'
                }
            }
        }
        stage('docker-package'){
            agent any
            when{
              changeset "**/result/**"
              branch 'master'
            }
            steps{
                echo 'packageing result app into a docker'
                script{
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin'){
                        def workerImage = docker.build("robslab/result:v${env.BUILD_ID}", "./result")
                        workerImage.push()
                        workerImage.push("{env.BRANCH_NAME}")
                    }
                }
            }
        }
    }
    post{
        always{
            echo 'pipeline for result is complete..'
        }
        failure{
          slackSend (channel: "learn-cicd", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER}")
        }
        success{
          slackSend (channel: "learn-cicd", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER}")
        }
        }
    }
}
